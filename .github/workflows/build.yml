name: Build rsjson lib

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Set env
        if: matrix.os != 'windows-latest'
        run: |
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          VERSION="${{ github.ref_name }}"
          echo "VERSION=${VERSION#v}" >> $GITHUB_ENV

      - name: Set env (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          $version = '${{ github.ref_name }}'.Substring(1)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Print the version
        run: echo "The current version is ${{ env.VERSION }}"

      - name: Build
        run: cargo build --release

      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rsjson-linux
          path: target/release/librsjson.so

      - name: Upload Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rsjson-macos
          path: target/release/librsjson.dylib

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rsjson-windows
          path: target/release/rsjson.dll

      - name: Install LuaRocks (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install build-essential libreadline-dev unzip
          sudo apt install luarocks
          sudo luarocks install dkjson

      - name: Install LuaRocks (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install luarocks
          luarocks install dkjson

      - name: Install LuaRocks (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install luarocks
          luarocks install dkjson

      - name: Prepare rockspec file (Non-Windows)
        if: matrix.os != 'windows-latest'
        run: |
          # load 'rsjson-template.rockspec' and replace '{{VERSION}}' with the current version
          sed "s/{{VERSION}}/${{ env.VERSION }}/g" rsjson-template.rockspec > rsjson-${{ env.VERSION }}-1.rockspec

      - name: Prepare rockspec file (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # load 'rsjson-template.rockspec' and replace '{{VERSION}}' with the current version
          (Get-Content rsjson-template.rockspec) -replace '{{VERSION}}', $env:VERSION | Set-Content rsjson-${{ env.VERSION }}.rockspec

      - name: Build LuaRocks Package
        run: |          
          sudo luarocks make --pack-binary-rock rsjson-${{ env.VERSION }}.rockspec

      - name: Upload LuaRocks Package
        uses: actions/upload-artifact@v4
        with:
          name: rsjson-${{ matrix.os }}.rock
          path: rsjson-${{ env.VERSION }}.*.rock

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            rsjson-${{ env.VERSION }}.*.rock
            *.so
            *.dylib
            *.dll
            
